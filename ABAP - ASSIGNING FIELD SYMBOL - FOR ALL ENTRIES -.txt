*&---------------------------------------------------------------------*
*& Report ZABAPR_ZEXER_AULA08_16
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZABAPR_ZEXER_AULA08_16.


INCLUDE ZABAPI_ZEXER_AULA08_16_TOP. "TUDO QUE É GLOBAL INSERIR NESSE INCLUDE.

INCLUDE ZABAPI_ZEXER_AULA08_16_SEL.

INCLUDE ZABAPI_ZEXER_AULA08_16_F01.

START-OF-SELECTION.

PERFORM F_SELECT_DATA_EKPO.

PERFORM F_ALV_RELATORIO.
_________________________________
*&---------------------------------------------------------------------*
*& Include          ZABAPI_ZEXER_AULA08_16_TOP
*&---------------------------------------------------------------------*

TABLES: EKPO,
        MARA.

TYPES: BEGIN OF TY_OUT,
           box   TYPE C LENGTH 1,
           EBELN TYPE EKPO-EBELN,
           EBELP TYPE EKPO-EBELP,
           MATNR TYPE EKPO-MATNR,
           BISMT TYPE MARA-BISMT,
       END OF TY_OUT.

DATA: t_out TYPE TABLE OF ty_out.
DATA: T_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV,
      T_EVENTS   TYPE SLIS_T_EVENT.
	  
_________________________________


*&---------------------------------------------------------------------*
*& Include          ZABAPI_ZEXER_AULA08_16_SEL
*&---------------------------------------------------------------------*

SELECT-OPTIONS: s_infor for EKPO-EBELN.

_________________________________

*&---------------------------------------------------------------------*
*& Report ZABAPR_ZEXER_AULA08_16
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZABAPR_ZEXER_AULA08_16.


INCLUDE ZABAPI_ZEXER_AULA08_16_TOP. "TUDO QUE É GLOBAL INSERIR NESSE INCLUDE.

INCLUDE ZABAPI_ZEXER_AULA08_16_SEL.

INCLUDE ZABAPI_ZEXER_AULA08_16_F01.

START-OF-SELECTION.

PERFORM F_SELECT_DATA_EKPO.

PERFORM F_ALV_RELATORIO.
_________________________________

*&---------------------------------------------------------------------*
*& Include          ZABAPI_ZEXER_AULA08_16_F01
*&---------------------------------------------------------------------*


FORM f_select_data_EKPO.
  DATA lwa_out TYPE ty_out.
  TYPES: BEGIN OF ty_fatura,
           ebeln TYPE ekpo-ebeln,
           ebelp TYPE ekpo-ebelp,
           matnr TYPE ekpo-matnr,
         END OF ty_fatura.

  DATA: lt_fatura TYPE TABLE OF ty_fatura.
  DATA: lw_fatura TYPE ty_fatura.

  SELECT ebeln ebelp matnr
    FROM ekpo
    INTO TABLE lt_fatura
    WHERE ebeln  IN s_infor.

  "SELECT EBELN, EBELP, MATNR
*FROM EKPO
*INTO TABLE @DATA(LT_EKPO)
*WHERE EBELN IN @s_infor.

  IF sy-subrc IS INITIAL.

    SORT lt_fatura BY ebeln.

    TYPES: BEGIN OF ty_infor_material,
             matnr TYPE mara-matnr,
             bismt TYPE mara-bismt,
           END OF ty_infor_material.

    DATA: lt_infor_material TYPE TABLE OF ty_infor_material.
    DATA: lwa_infor_material TYPE ty_infor_material.

    SELECT matnr bismt
      FROM mara
      INTO TABLE lt_infor_material
      FOR ALL ENTRIES IN lt_fatura
      WHERE matnr = lt_fatura-matnr.
  ENDIF.

  IF sy-subrc IS INITIAL.

    SORT lt_infor_material  BY matnr.

    LOOP AT  lt_fatura ASSIGNING FIELD-SYMBOL(<lfs_ekpo>).
      CLEAR lwa_out.
      lwa_out-ebeln = <lfs_ekpo>-ebeln.
      lwa_out-ebelp = <lfs_ekpo>-ebelp.
      lwa_out-matnr = <lfs_ekpo>-matnr.


      READ TABLE lt_infor_material ASSIGNING FIELD-SYMBOL(<lfs_mara>)
      WITH KEY matnr = <lfs_ekpo>-matnr
      BINARY SEARCH.
      IF sy-subrc IS INITIAL.

        lwa_out-bismt = <lfs_mara>-Bismt.
      ENDIF.
      APPEND lwa_out TO t_out.
      CLEAR lwa_out.
    ENDLOOP.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_ALV_RELATORIO
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
FORM f_alv_relatorio .

  DATA: lwa_layout TYPE slis_layout_alv. " TIPO SEMPRE DEVE SER ESSE PARA LAYOUT.
  PERFORM f_preencher_fieldcat.
  PERFORM f_preenche_evento.

  lwa_layout-zebra = abap_true.
  lwa_layout-box_fieldname = 'BOX'.
  lwa_layout-box_tabname = 'T_OUT'.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*     I_INTERFACE_CHECK        = ' '
*     I_BYPASSING_BUFFER       = ' '
*     I_BUFFER_ACTIVE          = ' '
      i_callback_program       = sy-repid
      i_callback_pf_status_set = 'STATUS_1001'
      i_callback_user_command  = 'USER_COMMAND'
*     I_CALLBACK_TOP_OF_PAGE   = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME         =
*     I_BACKGROUND_ID          = ' '
*     I_GRID_TITLE             =
*     I_GRID_SETTINGS          =
      is_layout                = lwa_layout
      it_fieldcat              = t_fieldcat[]
*     IT_EXCLUDING             =
*     IT_SPECIAL_GROUPS        =
*     IT_SORT                  =
*     IT_FILTER                =
*     IS_SEL_HIDE              =
*     I_DEFAULT                = 'X'
*     I_SAVE                   = ' '
*     IS_VARIANT               =
      it_events                = t_events
*     IT_EVENT_EXIT            =
*     IS_PRINT                 =
*     IS_REPREP_ID             =
*     I_SCREEN_START_COLUMN    = 0
*     I_SCREEN_START_LINE      = 0
*     I_SCREEN_END_COLUMN      = 0
*     I_SCREEN_END_LINE        = 0
*     I_HTML_HEIGHT_TOP        = 0
*     I_HTML_HEIGHT_END        = 0
*     IT_ALV_GRAPHICS          =
*     IT_HYPERLINK             =
*     IT_ADD_FIELDCAT          =
*     IT_EXCEPT_QINFO          =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*     O_PREVIOUS_SRAL_HANDLER  =
* IMPORTING
*     E_EXIT_CAUSED_BY_CALLER  =
*     ES_EXIT_CAUSED_BY_USER   =
    TABLES
      t_outtab                 = t_out
* EXCEPTIONS
*     PROGRAM_ERROR            = 1
*     OTHERS                   = 2
    .
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.



ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_PREENCHER_FIELDCAT
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM f_preencher_fieldcat .

  DATA lwa_fieldcat TYPE slis_fieldcat_alv.

  CLEAR lwa_fieldcat.

  lwa_fieldcat-tabname = 'T_OUT'.
  lwa_fieldcat-fieldname = 'EBELN'.
  lwa_fieldcat-col_pos = '1'.
  lwa_fieldcat-seltext_s = 'Pur. Doc.'.
  lwa_fieldcat-seltext_M = 'Purchasing Doc.'.
  lwa_fieldcat-seltext_L = 'Purchasing Document'.

  APPEND lwa_fieldcat TO t_fieldcat.

  CLEAR lwa_fieldcat.

  lwa_fieldcat-tabname = 'T_OUT'.
  lwa_fieldcat-fieldname = 'EBELP'.
  lwa_fieldcat-col_pos = '2'.
  lwa_fieldcat-seltext_s = 'ITEM'.
  lwa_fieldcat-seltext_M = 'ITEM'.
  lwa_fieldcat-seltext_L = 'ITEM'.

  APPEND lwa_fieldcat TO t_fieldcat.

  CLEAR lwa_fieldcat.

  lwa_fieldcat-tabname = 'T_OUT'.
  lwa_fieldcat-fieldname = 'MATNR'.
  lwa_fieldcat-col_pos = '3'.
  lwa_fieldcat-seltext_s = 'Material'.
  lwa_fieldcat-seltext_M = 'Material'.
  lwa_fieldcat-seltext_L = 'Material'.

  APPEND lwa_fieldcat TO t_fieldcat.

  CLEAR lwa_fieldcat.

  lwa_fieldcat-tabname = 'T_OUT'.
  lwa_fieldcat-fieldname = 'BISMT'.
  lwa_fieldcat-col_pos = '4'.
  lwa_fieldcat-seltext_s = 'Descricao Material'.
  lwa_fieldcat-seltext_M = 'Descricao Material'.
  lwa_fieldcat-seltext_L = 'Descricao Material'.

  APPEND lwa_fieldcat TO t_fieldcat.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form F_PREENCHE_EVENTO
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM f_preenche_evento .
  CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
    EXPORTING
      i_list_type = 0
    IMPORTING
      et_events   = t_events.


ENDFORM.


FORM status_1001 USING  extab TYPE slis_t_extab.

  SET PF-STATUS 'STATUS_1001' EXCLUDING extab.

ENDFORM.

FORM user_command USING r_ucomm LIKE sy-ucomm
                  rs_selfield TYPE slis_selfield.

  DATA lwa_out TYPE ty_out.
  CASE r_ucomm.
    WHEN 'SHOW'.
      READ TABLE t_out INTO lwa_out WITH KEY box = abap_true.
       IF sy-subrc IS INITIAL.
        SET PARAMETER ID 'VF' FIELD lwa_out-Ebeln.
        CALL TRANSACTION 'VF03' AND SKIP FIRST SCREEN.
      ENDIF.
      WHEN 'TST'.
        MESSAGE I001(00) WITH 'CAUTION'.

*      CALL FUNCTION 'ME_DISPLAY_PURCHASE_DOCUMENT'
*        EXPORTING
*          i_ebeln = lwa_out-ebeln
**         I_EBELP =
**         I_ENJOY = 'X'
**         I_PREVIEW                  =
**         I_DATA_FROM_BUFFER         =
**         I_BSTYP =
**         I_DISPLAY_ONLY             = ' '
**         I_EDIT  = ' '
**         I_ETENR =
**         I_DOC_INITIATOR            =
**         I_COMMIT_WAIT              =
**       EXCEPTIONS
**         NOT_FOUND                  = 1
**         NO_AUTHORITY               = 2
**         INVALID_CALL               = 3
**         PREVIEW_NOT_POSSIBLE       = 4
**         OTHERS  = 5
*        .
*      IF sy-subrc <> 0.
**       Implement suitable error handling here
*      ENDIF.
     WHEN 'BACK'.
       CLEAR SCREEN.
       SET SCREEN 0.


    WHEN OTHERS.


  ENDCASE.

ENDFORM.































































